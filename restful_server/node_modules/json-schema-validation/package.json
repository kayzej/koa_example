{
  "name": "json-schema-validation",
  "version": "0.0.3",
  "description": "validation for json-schema",
  "main": "src/index.js",
  "scripts": {
    "test": "npm test"
  },
  "repository": {
    "type": "git",
    "url": "git@gitlab.alibaba-inc.com:jsonnanny/json-schema-validation.git"
  },
  "keywords": [
    "validation",
    "json",
    "json-schema"
  ],
  "author": {
    "name": "yinruo.nyj"
  },
  "license": "MIT",
  "dependencies": {
    "tv4": "^1.0.18",
    "json-schema-ref": "*",
    "lodash": "^2.4.1",
    "json-schema-format": "0.0.4"
  },
  "readme": "# json-schema-validation\n\njson-schema 校验工具\n\n## 安装\n\n```\nnpm install json-schema-validation --save\n```\n\n## 使用\n\n```\nvar validator = require( 'json-schema-validation' );\n\nvalidator( [ 1, 3, ], { type: 'object' }, function( err, result ){\n\n    console.log( result );\n    /* -->\n    error: Object\n    errorType: \"INVALID_TYPE\"\n    message: \"Error: [INVALID_TYPE] invalid type: array (expected object) at data path: 'ROOT', by schema at path: '/type';\"\n    result: false\n    */\n});\n\n```\n\n## $ref\n\n如果schema中包含 `$ref` 会先使用[json-schema-ref](http://gitlab.taobao.ali.com/jsonnanny/json-schema-ref/tree/master)模块进行解析（所以这个校验工具是个异步模块）；",
  "readmeFilename": "README.md",
  "_id": "json-schema-validation@0.0.3",
  "dist": {
    "shasum": "1ab008b2a0b081ac2463ca934ac41b81749ef7d7"
  },
  "_from": "json-schema-validation@",
  "_resolved": "https://registry.npmjs.org/json-schema-validation/-/json-schema-validation-0.0.3.tgz"
}
